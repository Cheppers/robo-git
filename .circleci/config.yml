
version: 2

_custom:
    step__git_config: &step__git_config
        name: 'Git config'
        command: |
            git config --global user.name 'Circle CI'
            git config --global user.email 'circle.ci@example.com'
    step__restore_cache: &step__restore_cache
        name: 'Cache restore - "./vendor"'
        keys:
            - 'v1-dependencies-{{ checksum "composer.lock" }}'
            - 'v1-dependencies-'
    step__run__composer_install: &step__run__composer_install
        name: 'Build'
        command: 'composer install --no-interaction'
    step__save_cache: &step__save_cache
        name: 'Cache save - "./vendor"'
        paths:
            - './vendor'
        key: 'v1-dependencies-{{ checksum "composer.lock" }}'
    step__run__linters: &step__run__linters
        name: 'Run linters'
        command: 'bin/robo lint'
    step__run__codeception_unit: &step__run__codeception_unit
        name: 'Codeception - unit'
        command: 'bin/robo test unit'
    step__run__codeception_acceptance: &step__run__codeception_acceptance
        name: 'Codeception - acceptance'
        command: 'bin/robo test acceptance'
    step__store_test_results: &step__store_test_results
        path: 'tests/_output/machine/junit'
    step__run__codecov: &step__run__codecov
        name: 'Publish the code coverage report on Codecov.io'
        when: 'always'
        command: >
            [ ! -s tests/_output/machine/coverage/*/coverage.xml ]
            || bash <(curl -s https://codecov.io/bash)
            || true

    job__lint_and_test: &job__lint_and_test
        working_directory: '~/repo'
        steps:
            - 'checkout'
            -
                run:
                    <<: *step__git_config
            -
                restore_cache:
                    <<: *step__restore_cache
            -
                run:
                    <<: *step__run__composer_install
            -
                save_cache:
                    <<: *step__save_cache
            -
                run:
                    <<: *step__run__linters
            -
                run:
                    <<: *step__run__codeception_unit
            -
                run:
                    <<: *step__run__codeception_acceptance
            -
                store_test_results:
                    <<: *step__store_test_results
            -
                run:
                    <<: *step__run__codecov

jobs:
    php702__lint_and_test:
        <<: *job__lint_and_test
        docker:
            -
                image: 'circleci/php:7.2'
    php703__lint_and_test:
        <<: *job__lint_and_test
        docker:
            -
                image: 'circleci/php:7.3'

workflows:
    version: 2
    php702__lint_and_test:
        jobs:
            - 'php702__lint_and_test'
    php703__lint_and_test:
        jobs:
            - 'php703__lint_and_test'
